# boolean expressions

# basic expressions
while true do 1; end
while 1 != 1 do 1; end
while 1 == 2 do 1; end
while 1 <= 2 do 1; end
while 1 >= 2 do 1; end
while 1 > 2 do 1; end
while 1 < 2 do 1; end

# expressions with comparators
while x < y do 1; end
while 1 < y do 1; end
while "a" > "b" do 1; end
while "a" < 1 do 1; end
while true < false do 1; end
while x == true do 1; end
while 3.14 > 3.15 do 1; end
while 1 < 3.14 do 1; end
while f(1) < f(2) do 1; end
while f(1) == 1 do 1; end
while x.y1.z == x.y2 do 1; end

# boolean connectors
while x and y do 1; end
while x or y do 1; end
while x and y or z do 1; end
while x or y and not z do 1; end
while (x or y) do 1; end
while (x or (y and z)) do 1; end
while ((x or y) and z) do 1; end
while not x do 1; end
while not (x or y) do 1; end
while (not x and not (x and y)) do 1; end
while x == y and y == z do 1; end
while (x == y or (x > y and y > z)) do 1; end

# if statements
if true then 1; end
if true then 1; else 2; end
if true then 1; elif false then 2; else 3; end
if true then 1; elif false then 2; elif true then 3; else 4; end

# nested statements
if true then
    if false then
        1; 
    end
    if true then
        1; 2; 3; 
    end
elif false then
    while true do
        1; 2; 3;
    end
else
    if x == y then
        if y > 1 then
            if x < 0 then
                1; 2; 3;
            end
        else
            if x > 0 then
                1; 2; 3;
            else
                1; 1; 2;
            end
        end
        1; 2; 3; 
    end
end

if true then
    while false do
       1; 2;
    end
end

while true do
    if false then 1; end
    if true then 2; end
end


